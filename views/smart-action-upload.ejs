<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <title>
        New smart action
    </title>

    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="styles.css">

    <script defer src="https://unpkg.com/peerjs@1.3.1/dist/peerjs.min.js"></script>
    <script defer src="/socket.io/socket.io.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/pdfmake@0.2.5/build/pdfmake.min.js"></script>
</head>

<body>
    <div class="container mw-540 p-3">
        <h3 class="mt-4">ü§ñ Telepresence Robot Portal</h3>
        <h5 class="py-2">Admin dashboard</h5>
    </div>

    <div class="container-fluid bg-dark">
        <div class="container mw-540 px-3 py-2">
            <div class=" d-flex align-items-center">
                <img src="/photos/<%= id %>.png" class="rounded-circle me-2" alt="" width="42" height="42">
                <div class="d-flex py-2 me-auto">
                    <h6 class="my-auto text-white"><b><%= name %></b><br>üèõÔ∏è <%= inst %></h6>
                </div>
                <div class="d-flex py-2">
                    <form method="GET" action="/smart-actions">
                        <button type="submit" class="btn btn-light">‚ùå Cancel</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="container mw-540 py-3 px-4">
        <h6 class="mt-2">New smart action</h6>

        <div class="progress mb-4">
            <div class="progress-bar" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0"
                aria-valuemax="100"></div>
        </div>

        <div class="form-floating mb-2 mt-3">
            <input name="name" type="text" class="form-control" id="name" placeholder="Default smart action" required>
            <label for="name">Name/description</label>
        </div>
        <p class="text text-secondary mb-3"><i>Hint: Something to identify the action on the admin dashboard.
                You'll set up the IFTTT interaction itself in the next step.</i></p>

        <!-- <div class="form-floating mt-3 mb-3">
                <input name="webhook" type="text" class="form-control" id="ifttt-webhook"
                    placeholder="https://example.com" required>
                <label for="ifttt-webhook">IFTTT webhook link</label>
            </div> -->

        <label class="form-label" for="fiducial-patt">Fiducial marker icon <b>(.jpg)</b></label>
        <input name="fiducial" type="file" class="form-control mb-2" id="fiducial" required />
        <p class="text text-secondary mb-3"><i>Hint: The image shown on the icon you will print out and attach to
                walls. It should be as simple and high-contrast as possible (e.g., black and white).
            </i></p>

        <label class="form-label" for="arIcon">AR interactive icon <b>(.png)</b></label>
        <input name="arIcon" type="file" class="form-control mb-2" id="ar-icon" required />
        <p class="text text-secondary mb-3"><i>Hint: The image visible to the driver in AR when the marker is
                detected and the smart action is available.</i></p>

        <label class="form-label" for="arIconConfirm">AR confirmation icon <b>(.png)</b></label>
        <input name="arIconConfirm" type="file" class="form-control mb-2" id="ar-icon-confirm" required />
        <p class="text text-secondary mb-3"><i>Hint: The image shown for a short time when the driver interacts in
                AR, to confirm a successful trigger.</i></p>

        <button type="button" class="btn btn-dark px-4 mt-2 mb-5" onclick="generateFiducial();">‚û°Ô∏è Next</button>

        <script>
            function generateFiducial() {
                if (document.getElementById("fiducial").files.length == 0) {
                    return;
                }

                var fiducialInner = document.getElementById("fiducial").files[0];
                var fiducialInnerURL = window.URL.createObjectURL(fiducialInner);
                THREEx.ArPatternFile.buildFullMarker(
                    window.URL.createObjectURL(fiducialInner), 0.5, 512, "black",
                    function onComplete(markerURL) {
                        THREEx.ArPatternFile.encodeImageURL(fiducialInnerURL,
                            async function onComplete(patternString) {
                                var patternURL = window.URL.createObjectURL(new Blob([patternString], { type: 'text/plain' }));
                                var patternFile = await fetch(patternURL)
                                    .then(r => r.blob())
                                    .then(blobFile => new File([blobFile], "pattern.patt", { type: "text/plain" }));

                                var printDesc = {
                                    content: [
                                        {
                                            image: markerURL,
                                            width: 300,
                                            alignment: 'center',
                                        },
                                        {
                                            image: markerURL,
                                            width: 300,
                                            alignment: 'center',
                                        },
                                    ]
                                }
                                pdfMake.createPdf(printDesc).getDataUrl(async function (fileURL) {
                                    var printFile = await fetch(fileURL)
                                        .then(r => r.blob())
                                        .then(blobFile => new File([blobFile], "print.pdf", { type: "application/pdf" }));

                                    const formData = new FormData();
                                    formData.append("name", document.getElementById("name").value);
                                    formData.append("patternFile", patternFile);
                                    formData.append("markerPrint", printFile);
                                    formData.append("arIcon", document.getElementById("ar-icon").files[0]);
                                    formData.append("arIconConfirm", document.getElementById("ar-icon-confirm").files[0]);

                                    fetch('/smart-action-upload', {
                                        method: 'POST',
                                        body: formData
                                    });
                                });
                            });
                    });
            };
        </script>
    </div>

    <script defer src='threex-arpatternfile.js'></script>


    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"></script>
</body>

</html>